<!DOCTYPE html>
<html>
<head>
  <title>feedMi</title>
  <%= csrf_meta_tags %>
  <%= stylesheet_link_tag    'application', media: 'all',
  'data-turbolinks-track': 'reload' %>
  <script>
    var map, infoWindow, pos, markerCount;
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 0, lng: 0},
        zoom: 14
      });
      infoWindow = new google.maps.InfoWindow();

      // Get user location, then find restaurants nearby
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };

          infoWindow.setPosition(pos);
          infoWindow.setContent('You are here!');
          infoWindow.open(map);
          map.setCenter(pos);
          markerCount = 0;
          getFoodRestaurantsNearby(map, pos);
          if (markerCount < 5) {
          getOriginRestaurantsNearby(map, pos);
          }
        }, function() {
          handleLocationError(true, infoWindow, map.getCenter());
        });
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
    }

    function getFoodRestaurantsNearby(map, pos) {
      var foodName = "<%= @food.food_name %>";

      //Do a place search for restaurants nearby
      var placeService = new google.maps.places.PlacesService(map);
      placeService.nearbySearch({
        location: pos,
        radius: 3000,
        keyword: foodName,
        type: ['restaurant']
      }, callback);
    }

    function getOriginRestaurantsNearby(map, pos) {
      var foodOrigin = "<%= @food.food_origin %>";

      //Do a place search for restaurants nearby
      var placeService = new google.maps.places.PlacesService(map);
      placeService.nearbySearch({
        location: pos,
        radius: 3000,
        keyword: foodOrigin,
        type: ['restaurant']
      }, callback);
    }

    function callback(results, status) {
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < results.length; i++) {
          createMarker(results[i]);
        }
      }
    }

    function createMarker(place) {
      var placeLoc = place.geometry.location;
      var marker = new google.maps.Marker({
        map: map,
        position: place.geometry.location
      });

      google.maps.event.addListener(marker, 'click', function() {
        infoWindow.setContent(place.name);
        infoWindow.open(map, this);
      });
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(browserHasGeolocation ?
                            'Error: Please turn on location services.' :
                            'Error: Your browser doesn\'t support geolocation.');
      infoWindow.open(map);
    }
  </script>
  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD90bDSQmkeoB_dLU9x82FtOAYPweWKQVg&libraries=places&callback=initMap">
  </script>
  <script>
    function retrieveSearchResults(response) {
      if (response.items == undefined) {
        let noResultsText = 'Sorry! Could not find any recipes for <%= @food.food_name %>';
        let noResults = document.createTextNode(noResultsText);
        document.getElementById("searchResults").appendChild(noResults);
      } else {
        for (var i = 0; i < response.items.length; i++) {
          let item = response.items[i];
          let resLink = document.createElement('a');
          let resLinkText = document.createTextNode(item.title);
          let resBreak = document.createElement('br');
          resLink.appendChild(resLinkText);
          resLink.innerHtml = item.htmlTitle;
          resLink.href = item.link;
          document.getElementById("searchResults").appendChild(resLink);
          document.getElementById("searchResults").appendChild(resBreak);
        }
      }
    }
  </script>
  <script async defer
    src="https://www.googleapis.com/customsearch/v1?key=AIzaSyAILSunC6tE7KYoFfezidpemG_JN-6SrZM&cx=005349411452458523555:asc2vvdzm0o&q=<%= @food.food_name %>&callback=retrieveSearchResults">
  </script>
</head>
<body>
  <header class="navbar navbar-fixed-top navbar-inverse">
    <div class="container">
      <%= link_to("feedMi", {:controller => 'home', :action => 'index'}, id: "logo")%>
      <nav>
        <ul class="nav navbar-nav navbar-right">
          <li><%= link_to("Home", {:controller => 'home', :action => 'index'}) %></li>
          <li><%= link_to("Profile", {:controller => 'profile', :action => 'index'}) %></li>
          <li><%= link_to("Sign Out", {:controller => 'welcome', :action => 'index'}) %>
          </ul>
        </nav>
      </div>
    </header>
    <div>
      <%= link_to("Go Back", {:controller => 'home', :action => 'index'}, class: "btn btn-default")%>
      <div class="split left">
        <div class="centered">
          <h1>Recipes</h1>
          <p>Here are some Recipes!</p>
          <%= @food.id %>
          <%= @food.food_name %>
          <%= @food.food_origin %>
          <%= @food.food_type %>
        </div>
        <div id="searchResults" class="results"></div>
      </div>

      <div class="split right">
        <div class="centered">
          <h1>Restaurants</h1>
          <p>Here are some Restaraunts!</p>
          <%= @food.id %>
          <%= @food.food_name %>
          <%= @food.food_origin %>
          <%= @food.food_type %>
        </div>
        <div id="map" class="map"></div>
    </div>
  </body>
  </html>